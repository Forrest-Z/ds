/*************************************************************************
	> File Name: main.cpp
	> Author: 
	> Mail: 
	> Created Time: 2017年11月18日 星期六 08时32分11秒
 ************************************************************************/

#include<iostream>
using namespace std;


#include <ros/ros.h>

#include <dynamic_reconfigure/server.h>
#include <ivsimulationenv/simulationConfig.h>

void callback(ivsimulationenv::simulationConfig &config, uint32_t level) {
		ROS_INFO("Reconfigure Request:");
		ros::NodeHandle nh;
		//m_config = config;
		bool IsConfiguring = false;
		nh.getParam("configure",IsConfiguring);
		if(!IsConfiguring){
		nh.setParam("Target_ID", config.Target_ID);
		nh.setParam("function", config.Function);
		nh.setParam("sim_x", config.x);
		nh.setParam("sim_R_x", config.R_x);
		nh.setParam("sim_y", config.y);
		nh.setParam("sim_R_y", config.R_y);
		
		nh.setParam("sim_R_v", config.R_v);
		
		cout << "set setParam true"<<endl;
		nh.setParam("configure", true);
    }

	nh.setParam("sim_v", config.v);
	nh.setParam("sim_acceleration_selection", config.Acceleration_selection);    
    nh.setParam("sim_auto_scceleration", config.auto_acceleration);
    nh.setParam("sim_cycle_time", config.cycle_time);
    nh.setParam("sim_Range", config.Range);
    nh.setParam("sim_action", config.action);
	nh.setParam("sim_a", config.a);
	nh.setParam("sim_action", config.action);
}

int main(int argc, char **argv) {
  ros::init(argc, argv, "ivsimulationenv");

  dynamic_reconfigure::Server<ivsimulationenv::simulationConfig> server;
  dynamic_reconfigure::Server<ivsimulationenv::simulationConfig>::CallbackType f;

  f = boost::bind(&callback, _1, _2);
  server.setCallback(f);

  ROS_INFO("Spinning node");
  ros::spin();
  return 0;
}
