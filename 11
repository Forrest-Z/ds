/*************************************************************************
	> File Name: objectSimulation.h
	> Author: 
	> Mail: 
	> Created Time: 2017年11月18日 星期六 19时36分47秒
 ************************************************************************/

#ifndef _OBJECTSIMULATION_H
#define _OBJECTSIMULATION_H

#include "ros/ros.h"
#include "ros/time.h"

#include "perception_msgs/ivmsgobjfus.h"
#include "perception_msgs/objfus.h"
#include "ivpathplanner/ivmsgpath.h"
#include "ivpathplanner/motionpoint.h"
#include "ivlocmsg/ivsensorgps.h"
#include "ivactuator/ivactuator.h"
#include "ivmap/ivmapmsglocpos.h"
#include "ivmap/ivmapmsgvap.h"

#include "ivobject_simulation/objectDebug.h"

#include <sstream>
#include <iostream>
#include <fstream>
#include <math.h>

#include "globaldefine.h"
#include "../../../../avoslib/geotool.h"

#define SUBTOPIC_ACT      "ivactuator"



//actionnum  0:cancel  1:cut out   2: cut in  3  start
using namespace std;

typedef struct sMotionPath
{
  ivpathplanner::ivmsgpath msg;
  bool isvalid;
}sMotionPath;

typedef struct sGps
{
  ivlocmsg::ivsensorgps msg;
  bool isvalid;
}sGps;

typedef struct sMapvap
{
  ivmap::ivmapmsgvap msg;
  bool isvalid;
}sMapvap;


typedef struct sAct
{
  ivactuator::ivactuator msg;
  bool isvalid;
}sAct;



typedef struct sObj_conf{
    int id;
    double x;
    double y;
    double vxrel;
    double vyrel;
    double v;
	double runDis;
	double y_dis;

//actionnum  0:cancel  1:cut out   2: cut in  3  start
//0: follow outline   1: ready to cut in   2: follow inline  3: ready to cut out  
	int moveState;
	ros::Time  cut_Time;
    
    ivlocmsg::ivsensorgps gpsPoint;
	sPointOfGCCS gccpoint;
    sDynamicConfig dynamicConfig;
}sObj_conf;

class objectSimulation
{
public:
    //! Constructor.
    objectSimulation ( ros::NodeHandle mh );
    ~objectSimulation();
    void run();

private:
  
    void get_motionPath(const ivpathplanner::ivmsgpath::ConstPtr& msg);
    void get_gps(const ivlocmsg::ivsensorgps::ConstPtr & msg);
	void get_act(const ivactuator::ivactuator::ConstPtr &msg);
	void subCallback_locpos ( const ivmap::ivmapmsglocpos::ConstPtr &msg );
	void get_mapvap(const ivmap::ivmapmsgvap::ConstPtr & msg);
    
    
    void generateObjs();
    void getgConfig();
    void generateA();
    void generateV();
    
    void getGpsFromPath();
    sPoint2d getClosestPoint(sPoint2d point);
	sPoint2d getClosestDis(double dis);
	void forwardDis_FF(sObj_conf &obj_conf, double dis);
	void forwardDis_SS(sObj_conf &obj_conf);
	void forwardDis_CISD_y(sObj_conf &obj_conf);
	
    double getHeading();
    double getHeadingFromDis(double dis);
    double getDiffAngle(double angle1, double angle2);

private:
    ros::Publisher pub_obj;
    ros::Publisher pub_objDebug;
    ros::Subscriber sub_path;
	ros::Subscriber sub_gps;
	ros::Subscriber sub_act;
	ros::Subscriber sub_mapvap;
	ros::Subscriber sub_locpos;
    ros::NodeHandle gnh; 
    
    sDynamicConfig gConfig;
    perception_msgs::ivmsgobjfus objs;
    ivobject_simulation::objectDebug objectDebug;
    vector<sDynamicConfig> gConfigVec;
    
    vector<sObj_conf> obj_confVec;
    
    sMotionPath path;
    sGps gps;
	sAct act;
	sMapvap mapvap;
	
	geotool mgeoTool;

    ros::Time PathRevTime;
	ros::Time objRevTime;
	float self_v;
    ivlocmsg::ivsensorgps curgps;
	ivlocmsg::ivsensorgps TLgps;
	ivlocmsg::ivsensorgps initGps;

	sPointOfGCCS lastGCCS;
	float checkSumDis;
	float gpsSumDis, locposdis;
	bool isgpsvalid;
	
	ivmap::ivmapmsglocpos curlocpos;
	double lastxg,lastyg;
	double lastobjxg,lastobjyg;
	double lastPathDis;
};







#endif
