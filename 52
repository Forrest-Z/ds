/*************************************************************************
	> File Name: main.cpp
	> Author: 
	> Mail: 
	> Created Time: 2017年11月25日 星期六 23时08分18秒
 ************************************************************************/

#include<iostream>
#include <ros/ros.h>
#include "ivlocmsg/ivsensorgps.h"
#include "ivlocmsg/ivmsglocpos.h"
#include <string>
#include <sstream>
#include <stdio.h>
#include <string.h>

using namespace std;




int main(int argc, char **argv) {
    ros::init(argc, argv, "ivsimugps");
	ros::NodeHandle nh;
    ros::Rate rate ( 20  );
    

    ros::Publisher pub = nh.advertise < ivlocmsg::ivsensorgps > ( "ivsensorgps", 1000  );
	ros::Publisher pub_loc = nh.advertise < ivlocmsg::ivmsglocpos > ( "ivlocposlidar", 1000  );
    ivlocmsg::ivsensorgps curgps;
	ivlocmsg::ivmsglocpos curlocpos;
    while(ros::ok())
    {
        rate.sleep();
        nh.getParam("cur_sim_lon", curgps.lon);
        nh.getParam("cur_sim_lat", curgps.lat);
        nh.getParam("cur_sim_heading", curgps.heading);
        nh.getParam("cur_sim_velocity", curgps.velocity);
		
		
		nh.getParam("cur_sim_xg", curlocpos.xg);
        nh.getParam("cur_sim_yg", curlocpos.yg);
        nh.getParam("cur_sim_angle", curlocpos.angle);
        nh.getParam("cur_sim_velocity", curlocpos.velocity);
        cout << "zhongshan locpos_v:" << curlocpos.velocity << endl;
		
		curlocpos.lon = curgps.lon;
		curlocpos.lat = curgps.lat;
		curlocpos.heading = curgps.heading;
		
		
		
        curgps.satenum = 24;
        curgps.isvalid = 1;
        curgps.mode = 0;
        curgps.status = 4;

        pub.publish(curgps);
		nh.setParam("isover", true);
		pub_loc.publish(curlocpos);
    }
      return 0;

}









